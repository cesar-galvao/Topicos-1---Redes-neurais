"0","#| label: feed-forward"
"0",""
"0","# Função de ativação"
"0","phi <- function(x) {1/(1 + exp(-x))}"
"0",""
"0","# Função de previsão"
"0","ffwd <- function(x, theta) {"
"0","  "
"0","  if(any(dim(theta[[1]]) != c(2, 2))){"
"0","    stop(""O primeiro elemento de theta deve ser uma matriz de pesos 2x2 para a aplicação nos dados"")"
"0","  } else if(length(theta[[2]]) != 2){"
"0","    stop(""O segundo elemento de theta deve ser um vetor viés de tamanho 2 para somar aos dados"")"
"0","  } else if(any(dim(theta[[3]]) != c(2, 1))){"
"0","    stop(""O terceiro elemento de theta deve ser uma matriz de pesos 2x1 para aplicação na única camada h"")"
"0","  } else if(length(theta[[4]]) != 1){"
"0","    stop(""O quarto elemento de theta deve ser um vetor viés de tamanho 1 para soma na única camada h"")"
"0","  } else if(!is.vector(x) & length(x) != 2){"
"0","    stop(""O x deve ser um vetor de tamanho 2"")"
"0","  }"
"0","  "
"0","  x <- as.vector(x)"
"0","  "
"0","  W1 <- theta[[1]]"
"0","  b1 <- theta[[2]]"
"0","  W2 <- theta[[3]]"
"0","  b2 <- theta[[4]]"
"0","  "
"0","  a1 <- (t(W1)%*%x)+b1"
"0","  h <- phi(a1)"
"0","  yhat <- (t(W2)%*%h)+b2"
"0","  "
"0","  return( # separacao dos elementos de saída para usar no backpropagation"
"0","    list(yhat = as.double(yhat),"
"0","         hidden = h,"
"0","         pre_activation = a1)"
"0","  )"
"0","}"
